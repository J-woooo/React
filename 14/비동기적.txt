비동기 작업: 동시에 여러 request를 날리고 기다리는 과정에서 다른 함수를 호출 가능

작업을 비동기적으로 처리할 때 setTimeout 함수를 호출한다.
자바스크립트에서 비동기작업을 호출할 때, callback함수를 사용한다.

콜백함수 안에 콜백함수의 중첩이 가능하지만 지양해야한다. (콜백 지옥)
--> 콜백을 대체하는 Promise 함수

async/await

Promise 함수 앞에 추가
함수의 앞부분에 async, 함수 내부에서 Promise 앞부분에 await 키워드 사용
--> Promise가 끝날 때까지 기다리고, 결과 값을 특정 변수에 담을 수 있다.

axios: 자바스크립트 HTTP 클라이언트, HTTP 요청을 Promise 기반으로 처리한다.


useEffct에 등록하는 함수에 async를 붙이면 안된다. useEffect에서 반환해야 하는 값은
뒷정리 함수이기 때문에 useEffect 내부에서 async/await를 사용하고 싶다면,
함수 내부에 async 키워드가 붙은 또 다른 함수를 만들어서 사용해야 한다.

커스텀 훅을 사용한다면 상황에 따라 useEffect 설정을 직접 하지 않아도 되므로 코드가 간결해진다.

API를 연동하여 개발할 때 주의할 점
- useEffect에 등록하는 함수는 async로 작성하면 안된다. (내부에 async 함수를 만들어야 함 )
- 사용하는 API 종류가 많다면 요청을 위한 상태관리가 번거로워 지므로 리덕스와 리덕스 미들웨어 활용