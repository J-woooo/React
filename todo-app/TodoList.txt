TodoTemplate: 화면 가운데정렬, 앱 일정관리를 보여줌. 내부 JSX를 children으로 받아와서 렌더링

TodoInsert: 항목 추가 컴포넌트. state를 통해 인풋의 상태를 관리한다

TodoListItem: 할 일 항목에 대한 정보를 보여 주는 컴포넌트. todo 객체를 props로 받아와서 보여줌

TodoList: todos 배열을 props로 받아와 이를 map 함수를 이용해 여러 개의 TodoListItem 으로 변환

삽입
1. TodoInsert 컴포넌트에서 인풋 상태를 관리
2. App 컴포넌트 todos 배열에 새로운 객체를 추가하는 함수 작성
(1) id 값에 1씩 더해 준다 -> useRef를 사용하여 관리
(2) id 값이 렌더링되는 정보가 아니기 때문에 useState가 아닌 useRef
(3) onInsert 함수는 컴포넌트의 성능을 아낄 수 있도록 UseCallback으로 감싼다.
--> props로 전달해야 할 함수를 만들 때는 useCallback을 사용하여 함수를 감싸는 것을 습관화
(4) onInsert 함수를 TodoInsert 컴포넌트의 props로 설정

삭제
1. 배열의 불변성을 지키면서 배열 원소를 제거해야 하므로 내장함수 filter 사용
2. App 컴포넌트에 id를 파라미터로 받아와 같은 id를 가진 항목을 todos 배열에서 지운다.
3. TodoListItem에서 onRemove함수를 사용하기 위해서 TodoList 컴포넌트를 거쳐야 하므로
   onRemove 함수를 그대로 전달
4. 삭제 버튼을 누르면 TodoListItem에서 onRemove 함수에 현재 자신이 가진 id를 넣어서 삭제 함수
   호출

수정
1. onToggle 함수를 만들어 TodoList의 props로 전달
2. todo.id와 현재 파라미터로 사용하는 id가 같을 때는 우리가 정해 준 규칙대로 새로운 규칙 생성
3. id 값이 다를 때는 변화를 주지 않고 처음 받아 왔던 상태 그대로 반환



